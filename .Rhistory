#
# violences_physiques<-Data %>% filter(Indicateur=="Violences physiques")
#
#
# save(violences_physiques,file=paste0(Repertoire,"violences_physiques.RData"))
#
#
#
# vols_et_tentatives_de_vols<-Data %>% filter(Indicateur=="Vols et tentatives de vols avec violence")
#
#
# save(vols_et_tentatives_de_vols,file=paste0(Repertoire,"vols_et_tentatives_de_vols.RData"))
#
#
#
# vols_vehicules<-Data %>% filter(Indicateur=="Vols et tentatives de vols liés aux véhicules")
#
#
# save(vols_vehicules,file=paste0(Repertoire,"vols_vehicules.RData"))
#
#
#
# vols_sans_violence<-Data %>% filter(Indicateur=="Vols et tentatives de vols sans violence")
#
# save(vols_sans_violence,file=paste0(Repertoire,"vols_sans_violence.RData"))
#
#
#
# vols_sans_effraction<-Data %>% filter(Indicateur=="Vols sans effraction de résidences principales")
#
# save(vols_sans_effraction,file=paste0(Repertoire,"vols_sans_effraction.RData"))
#
#
# #ajout 08/12/2023
# taux_depot_plainte<-Data %>% filter(Indicateur=="Dépôt de plainte (victime ou ménage victime ayant déclaré avoir déposé plainte)")
#
# save(taux_depot_plainte,file=paste0(Repertoire,"taux_depot_plainte.RData"))
#
# #fin ajout 08/12/2023
#
#
#
#
library(shiny)
library(shiny.router)
library(shinydashboard)
library(shinybusy)
library(shinythemes)
library(shinyWidgets)
library(readxl)
library(tidyverse)
library(DT)
library(highcharter)
library(shinyjs)
library(shinycssloaders)
library(rintrojs)
library(officer)
library(flextable)
library(glue)
library(stringi)
library(plyr)
library(fresh)
suppression_accents <- function(text) {
text <- gsub("[^[:alnum:][:blank:]+?&/\\-^]", "", text)
text<-gsub("à","a",text)
text<-gsub("é","e",text)
text<-gsub("è","e",text)
text<-gsub("ê","e",text)
text<-gsub("ô","o",text)
text<-gsub(" ","_",text)
text <- gsub("\\s", "", text)
return(text)
}
# paste0(lapply(liste_1, function(x){x}),lapply(liste_2, function(z){z}))
source("Fonctions.R",encoding="UTF-8")
source("Modules.R",encoding="UTF-8")
load("data/ListeDesIndicateurs.RData")
fichiers_rdata <- tools::file_path_sans_ext(list.files("./data",pattern = "^data"))
length(fichiers_rdata)
length(ListeDesIndicateurs)
paste0(lapply(fichiers_rdata, function(x){x}),"-----",lapply(ListeDesIndicateurs, function(z){z}))
library(shiny)
library(shiny.router)
library(shinydashboard)
library(shinybusy)
library(shinythemes)
library(shinyWidgets)
library(readxl)
library(tidyverse)
library(DT)
library(highcharter)
library(lubridate, warn.conflicts = FALSE)
library(shinyjs)
library(shinycssloaders)
library(rintrojs)
library(officer)
library(flextable)
library(glue)
library(stringi)
library(plyr)
suppression_accents <- function(text) {
text <- gsub("[^[:alnum:][:blank:]+?&/\\-^]", "", text)
text<-gsub("à","a",text)
text<-gsub("é","e",text)
text<-gsub("è","e",text)
text<-gsub("ê","e",text)
text<-gsub("ô","o",text)
text<-gsub(" ","_",text)
text <- gsub("\\s", "", text)  # Supprime tous les espaces
return(text)
}
Repertoire<-"M:/ArboSSMSI/2-Bureaux/24-BVSSP/241- Projet Diffusion/2411-externe/24106-Applications Shiny/series-chronologiques/proto/data/"
Data<-read_excel(paste0(Repertoire,"Base_series_chronologiques_v1.3.xlsx"))
ListeDesIndicateurs<-sort(unique(Data$Indicateur))
save(ListeDesIndicateurs,file=paste0(Repertoire,"ListeDesIndicateurs.RData"))
modalites <- sort(unique(Data$Indicateur))
# Créer des fichiers .RData pour chaque modalité en utilisant lapply
lapply(modalites, function(modalite) {
df_filtre <- Data %>% filter(Indicateur == modalite)
modalite_clean<-tolower(suppression_accents(modalite))
assign(paste0("data_", modalite_clean), df_filtre)
save(list = paste0("data_", modalite_clean), file = paste0(Repertoire,"data_", modalite_clean, ".RData"))
})
# ActedevandalismeData<-Data %>% filter(Indicateur=="Actes de vandalisme")
#
#
# save(ActedevandalismeData,file=paste0(Repertoire,"ActedevandalismeData.RData"))
#
#
# atteintes_racistes_data<-Data %>% filter(Indicateur=="Atteintes à caractère raciste, xénophobe ou antireligieux")
#
#
# save(atteintes_racistes_data,file=paste0(Repertoire,"atteintes_racistes_data.RData"))
#
#
# atteintes_env_data<-Data %>% filter(Indicateur=="Atteintes à l'environnement")
#
#
# save(atteintes_env_data,file=paste0(Repertoire,"atteintes_env_data.RData"))
#
#
# atteintes_probite_data<-Data %>% filter(Indicateur=="Atteintes à la probité")
#
#
# save(atteintes_probite_data,file=paste0(Repertoire,"atteintes_probite_data.RData"))
#
#
#
# atteintes_LGBT_data<-Data %>% filter(Indicateur=="Atteintes anti LGBT")
#
#
# save(atteintes_LGBT_data,file=paste0(Repertoire,"atteintes_LGBT_data.RData"))
#
#
#
# cambriolages<-Data %>% filter(Indicateur=="Cambriolages et tentatives")
#
#
# save(cambriolages,file=paste0(Repertoire,"cambriolages.RData"))
#
#
# violences_sexuelles<-Data %>% filter(Indicateur=="Violences sexuelles")
#
#
# save(violences_sexuelles,file=paste0(Repertoire,"violences_sexuelles.RData"))
#
#
# actes_de_vandalisme<-Data %>% filter(Indicateur=="Actes de vandalisme")
#
#
# save(actes_de_vandalisme,file=paste0(Repertoire,"actes_de_vandalisme.RData"))
#
#
#
# escroqueries<-Data %>% filter(Indicateur=="Escroqueries et autres infractions assimilées")
#
#
# save(escroqueries,file=paste0(Repertoire,"escroqueries.RData"))
#
#
#
# menaces<-Data %>% filter(Indicateur=="Menaces")
#
#
# save(menaces,file=paste0(Repertoire,"menaces.RData"))
#
#
#
# atteintes_animaux<-Data %>% filter(Indicateur=="Atteintes envers les animaux domestiques")
#
#
# save(atteintes_animaux,file=paste0(Repertoire,"atteintes_animaux.RData"))
#
#
#
#
# destructions_degradations<-Data %>% filter(Indicateur=="Destructions et dégradations volontaires")
#
#
# save(destructions_degradations,file=paste0(Repertoire,"destructions_degradations.RData"))
#
#
#
# homicides<-Data %>% filter(Indicateur=="Homicides et tentatives d'homicide")
#
#
# save(homicides,file=paste0(Repertoire,"homicides.RData"))
#
#
#
# stupefiants<-Data %>% filter(Indicateur=="Infractions à la législation sur les stupéfiants")
#
#
# save(stupefiants,file=paste0(Repertoire,"stupefiants.RData"))
#
#
# injures<-Data %>% filter(Indicateur=="Injures")
#
#
# save(injures,file=paste0(Repertoire,"injures.RData"))
#
#
#
# outrages_contre_depositaires_autorite_publique<-Data %>% filter(Indicateur=="Outrages et violences contre dépositaires de l'autorité publique")
#
#
# save(outrages_contre_depositaires_autorite_publique,file=paste0(Repertoire,"outrages_contre_depositaires_autorite_publique.RData"))
#
#
# outrages_sexistes<-Data %>% filter(Indicateur=="Outrages sexistes")
#
#
# save(outrages_sexistes,file=paste0(Repertoire,"outrages_sexistes.RData"))
#
#
#
# sentiments_insecurite<-Data %>% filter(Indicateur=="Sentiment d'insécurité")
#
#
# save(sentiments_insecurite,file=paste0(Repertoire,"sentiments_insecurite.RData"))
#
#
#
# traites_des_etres_humains<-Data %>% filter(Indicateur=="Traite et exploitation des êtres humains")
#
#
# save(traites_des_etres_humains,file=paste0(Repertoire,"traites_des_etres_humains.RData"))
#
#
#
# violences_conjugales<-Data %>% filter(Indicateur=="Violences conjugales")
#
#
# save(violences_conjugales,file=paste0(Repertoire,"violences_conjugales.RData"))
#
#
#
#
# violences_physiques<-Data %>% filter(Indicateur=="Violences physiques")
#
#
# save(violences_physiques,file=paste0(Repertoire,"violences_physiques.RData"))
#
#
#
# vols_et_tentatives_de_vols<-Data %>% filter(Indicateur=="Vols et tentatives de vols avec violence")
#
#
# save(vols_et_tentatives_de_vols,file=paste0(Repertoire,"vols_et_tentatives_de_vols.RData"))
#
#
#
# vols_vehicules<-Data %>% filter(Indicateur=="Vols et tentatives de vols liés aux véhicules")
#
#
# save(vols_vehicules,file=paste0(Repertoire,"vols_vehicules.RData"))
#
#
#
# vols_sans_violence<-Data %>% filter(Indicateur=="Vols et tentatives de vols sans violence")
#
# save(vols_sans_violence,file=paste0(Repertoire,"vols_sans_violence.RData"))
#
#
#
# vols_sans_effraction<-Data %>% filter(Indicateur=="Vols sans effraction de résidences principales")
#
# save(vols_sans_effraction,file=paste0(Repertoire,"vols_sans_effraction.RData"))
#
#
# #ajout 08/12/2023
# taux_depot_plainte<-Data %>% filter(Indicateur=="Dépôt de plainte (victime ou ménage victime ayant déclaré avoir déposé plainte)")
#
# save(taux_depot_plainte,file=paste0(Repertoire,"taux_depot_plainte.RData"))
#
# #fin ajout 08/12/2023
#
#
#
#
library(shiny)
library(shiny.router)
library(shinydashboard)
library(shinybusy)
library(shinythemes)
library(shinyWidgets)
library(readxl)
library(tidyverse)
library(DT)
library(highcharter)
library(shinyjs)
library(shinycssloaders)
library(rintrojs)
library(officer)
library(flextable)
library(glue)
library(stringi)
library(plyr)
library(fresh)
suppression_accents <- function(text) {
text <- gsub("[^[:alnum:][:blank:]+?&/\\-^]", "", text)
text<-gsub("à","a",text)
text<-gsub("é","e",text)
text<-gsub("è","e",text)
text<-gsub("ê","e",text)
text<-gsub("ô","o",text)
text<-gsub(" ","_",text)
text <- gsub("\\s", "", text)
return(text)
}
# paste0(lapply(liste_1, function(x){x}),lapply(liste_2, function(z){z}))
source("Fonctions.R",encoding="UTF-8")
source("Modules.R",encoding="UTF-8")
load("data/ListeDesIndicateurs.RData")
fichiers_rdata <- tools::file_path_sans_ext(list.files("./data",pattern = "^data"))
length(fichiers_rdata)
length(ListeDesIndicateurs)
paste0(lapply(fichiers_rdata, function(x){x}),"-----",lapply(ListeDesIndicateurs, function(z){z}))
lapply(fichiers_rdata, function(i){
i
})
observeEventAndRenderUI("Violences physiques","data_violences_physiques")
print(observeEventAndRenderUI("Violences physiques","data_violences_physiques"))
print(`observeEventAndRenderUI("Violences physiques","data_violences_physiques")`)
paste0(lapply(fichiers_rdata, function(x){x}),"-----",lapply(ListeDesIndicateurs, function(z){z}))
paste0(lapply(fichiers_rdata, function(x){x}),",",lapply(ListeDesIndicateurs, function(z){z}))
paste0(lapply(fichiers_rdata, function(x){x}),",",lapply(ListeDesIndicateurs, function(z){z}))
paste0(  lapply(fichiers_rdata, function(x){x}), ",",  paste(lapply(ListeDesIndicateurs, function(z){z}))   )
paste0(  lapply(fichiers_rdata, function(x){x}), ",",  paste0(lapply(ListeDesIndicateurs, function(z){z}))   )
mapply(paste, fichiers_rdata, ListeDesIndicateurs)
mapply(paste0, fichiers_rdata, ListeDesIndicateurs)
fichiers_rdata
ListeDesIndicateurs
A<-c("A","B","C")
B<-c("2","2","3")
mapply(paste0, A, B)
A<-c("A","B","C")
B<-c("1","2","3")
mapply(paste0, A, B)
?mapply
lapply(fichiers_rdata, function(x){x})
x <- list(1,2,3)
y <- list('x','y','z')
list.zip(num=x,sym=y)
mapply(f, fichiers_rdata,ListeDesIndicateurs)
observeEventAndRenderUI<-function(params_1,params_2){
paste0(params_1,params_2)
}
mapply(observeEventAndRenderUI, fichiers_rdata,ListeDesIndicateurs)
observeEventAndRenderUI<-function(params_1,params_2){
paste0(params_1,",",params_2)
}
mapply(observeEventAndRenderUI, fichiers_rdata,ListeDesIndicateurs)
lapply(fichiers_rdata, function(x){
x
})
lapply(fichiers_rdata, function(x){x}),lapply(ListeDesIndicateurs, function(z){z})
lapply(fichiers_rdata, function(x){x}) lapply(ListeDesIndicateurs, function(z){z})
lapply(fichiers_rdata, function(x){x})
lapply(ListeDesIndicateurs, function(z){z})
mapply(function(x,y) print(x,y), fichiers_rdata, ListeDesIndicateurs)
for(i in 1:length(fichiers_rdata))
{
print(fichiers_rdata[i])
print(ListeDesIndicateurs[i])
}
for(i in 1:length(fichiers_rdata)) {
paste0(fichiers_rdata[i]," ",ListeDesIndicateurs[i])
}
for(i in 1:length(fichiers_rdata)) {
paste0(fichiers_rdata[i],",",ListeDesIndicateurs[i])
}
for(i in 1:length(fichiers_rdata)) {
paste0(fichiers_rdata[i],",",ListeDesIndicateurs[i])
}
for(i in 1:length(fichiers_rdata)) {
paste0(fichiers_rdata[i],"",ListeDesIndicateurs[i])
}
ListeDesIndicateurs
fichiers_rdata
for(i in 1:length(fichiers_rdata)) {
paste(fichiers_rdata[i],"",ListeDesIndicateurs[i])
}
for(i in 1:length(fichiers_rdata)) {
print(fichiers_rdata[i],ListeDesIndicateurs[i])
}
for(i in 1:length(fichiers_rdata)) {
print(i)
}
for(i in 1:length(fichiers_rdata)) {
fichiers_rdata[i]
}
fichiers_rdata[i]
fichiers_rdata[25]
fichiers_rdata
fichiers_rdata[1]
length(fichiers_rdata)
for (i in seq_along(fichiers_rdata)) {
fichiers_rdata[i]
}
for (i in seq_along(fichiers_rdata)) {
i
}
for (i in seq_len(fichiers_rdata)) {
i
}
list_a =c('apple','banana','orange')
list_b = c('apple_others','banana_others','orange_others')
Map(function(x, y) { x,y }, list_a, list_b)
list_a =c('apple','banana','orange')
list_b = c('apple_others','banana_others','orange_others')
Map(function(x, y) { x }, list_a, list_b)
list_a =c('apple','banana','orange')
list_b = c('apple_others','banana_others','orange_others')
Map(function(x, y) { cat(x,y) }, list_a, list_b)
list_a =c('apple','banana','orange')
list_b = c('apple_others','banana_others','orange_others')
Map(function(x, y) x,y, list_a, list_b)
list_a =c('apple','banana','orange')
list_b = c('apple_others','banana_others','orange_others')
Map(function(x, y) x y, list_a, list_b)
list_a =c('apple','banana','orange')
list_b = c('apple_others','banana_others','orange_others')
Map(function(x, y) paste(x,y), list_a, list_b)
liste_1<-c("A","B","C","D","E")
liste_2<-c("1","2","3","4","5")
liste_3<-c("a","b","c","d","e")
Map(function(x, y,z) paste(x,y,z), liste_1, liste_2,liste_3)
library(shiny)
library(shiny.router)
library(shinydashboard)
library(shinybusy)
library(shinythemes)
library(shinyWidgets)
library(readxl)
library(tidyverse)
library(DT)
library(highcharter)
library(lubridate, warn.conflicts = FALSE)
library(shinyjs)
library(shinycssloaders)
library(rintrojs)
library(officer)
library(flextable)
library(glue)
library(stringi)
library(plyr)
suppression_accents <- function(text) {
text <- gsub("[^[:alnum:][:blank:]+?&/\\-^]", "", text)
text<-gsub("à","a",text)
text<-gsub("é","e",text)
text<-gsub("è","e",text)
text<-gsub("ê","e",text)
text<-gsub("ô","o",text)
text<-gsub(" ","_",text)
text <- gsub("\\s", "", text)  # Supprime tous les espaces
return(text)
}
Repertoire<-"M:/ArboSSMSI/2-Bureaux/24-BVSSP/241- Projet Diffusion/2411-externe/24106-Applications Shiny/series-chronologiques/proto/data/"
Data<-read_excel(paste0(Repertoire,"Base_series_chronologiques_v1.3.xlsx"))
ListeDesIndicateurs<-sort(unique(Data$Indicateur))
save(ListeDesIndicateurs,file=paste0(Repertoire,"ListeDesIndicateurs.RData"))
modalites <- sort(unique(Data$Indicateur))
lapply(modalites, function(modalite) {
df_filtre <- Data %>% filter(Indicateur == modalite)
modalite_clean<-tolower(suppression_accents(modalite))
assign(paste0("data_", modalite_clean), df_filtre)
save(list = paste0("data_", modalite_clean), file = paste0(Repertoire,"data_", modalite_clean, ".RData"))
})
load("data/ListeDesIndicateurs.RData")
library(shiny)
ui <- div(
tags$script(src = "https://cdn.tailwindcss.com"),
div(
"I am a rounded box!",
class = "rounded bg-gray-300 w-64 p-2.5 m-2.5"
)
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
library(shiny)
ui <- div(
tags$script(src = "https://cdn.tailwindcss.com"),
div(
"I am a rounded box!",
class = "rounded bg-gray-300 w-64 p-2.5 m-2.5"
),
twSliderInput("bins", "Number of Bins:", min = 1, max = 10, value = 5,label_class = "font-bold"),
)
install.packages("shiny.tailwind")
shiny::runApp()
